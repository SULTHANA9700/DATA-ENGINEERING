Write a C program to implement:

(a) min-max normalization

(b) z-score normalization

(c) Normalization by decimal scaling.

source code:

#include<stdio.h>
#include<math.h>
float mean(float a[],int n){
        float s=0;
        for(int i=0;i<n;i++){
                s=s+a[i];
        }
        return s/n;
}
float std(float a[],int n){
        float xbar=mean(a,n),result,p=0;
        for(int i=0;i<n;i++){
                p=p+pow((a[i]-xbar),2);
        }
        if(n<30){
                n=n-1;
        }
        result=sqrt(p/n);
        return result;
}
float mini(float a[],int n){
    float m=a[0];
    for(int i=1;i<n;i++){
        if(m>a[i]){
            m=a[i];
        }
    }
    return m;
}
float maxi(float a[],int n){
    float m=a[0];
    for(int i=1;i<n;i++){
        if(m<a[i]){
            m=a[i];
        }
    }
    return m;
}
int nod(int n){
    int s=0,c=0;
    while(n!=0){
        c++;
        n=n/10;
    }
    return c;
}
void main(){
    float a[27]={13,15,16,16,19,20,20,21,22,22,25,25,25,25,30,33,33,35,35,35,35,36,40,45,46,52,70};
    int n=27,choice,new_max,new_min,k;
    float min,max,m,s;
    printf("enter choice \n1. min-max normalisation \n2. z-score normalisation \n3. normalisation by decimal scaling  ");
    scanf("%d",&choice);
    switch(choice){
        case 1:
        printf("enter the max range value that you want to normalize");
        scanf("%d",&new_max);
        printf("enter the min range value that you want to normalize");
        scanf("%d",&new_min);
        min=mini(a,n); //minimum value
        max=maxi(a,n); //maximum value
        for(int i=0;i<n;i++){
            a[i]=(((a[i]-min)/(max-min))*(new_max-new_min))+new_min;
        }
        break;
        case 2:
        m=mean(a,n); //mean value
        s=std(a,n); //standard deviation value
        for(int i=0;i<n;i++){
             a[i]=(a[i]-m)/s;
        }
        break;
        case 3:
        k=nod((maxi(a,n))); //finding the no. of digits of largest number in the given array
        for(int i=0;i<n;i++){
            a[i]=a[i]/(pow(10,k));
        }
        break;
        default:
        printf("wrong choice");
    }
    printf("normalised array : ");
    for(int i=0;i<n;i++){
        printf("%f\n",a[i]);
    }
}

output 1:

enter choice
1. min-max normalisation
2. z-score normalisation
3. normalisation by decimal scaling  1
enter the max range value that you want to normalize1
enter the min range value that you want to normalize0
normalised array : 0.000000
0.035088
0.052632
0.052632
0.105263
0.122807
0.122807
0.140351
0.157895
0.157895
0.210526
0.210526
0.210526
0.210526
0.298246
0.350877
0.350877
0.385965
0.385965
0.385965
0.385965
0.403509
0.473684
0.561404
0.578947
0.684211
1.000000



output 2:

enter choice
1. min-max normalisation
2. z-score normalisation
3. normalisation by decimal scaling  2
normalised array : -1.310678
-1.156144
-1.078877
-1.078877
-0.847076
-0.769809
-0.769809
-0.692542
-0.615275
-0.615275
-0.383474
-0.383474
-0.383474
-0.383474
0.002862
0.234663
0.234663
0.389197
0.389197
0.389197
0.389197
0.466464
0.775532
1.161868
1.239135
1.702737
3.093545



output 3:

enter choice
1. min-max normalisation
2. z-score normalisation
3. normalisation by decimal scaling  3
normalised array : 0.130000
0.150000
0.160000
0.160000
0.190000
0.200000
0.200000
0.210000
0.220000
0.220000
0.250000
0.250000
0.250000
0.250000
0.300000
0.330000
0.330000
0.350000
0.350000
0.350000
0.350000
0.360000
0.400000
0.450000
0.460000
0.520000
0.700000


